{"version":3,"sources":["../../src/middlewares/tokenValidator.js"],"names":["tokenValidator","req","res","next","token","header","status","json","user","jwt","verify","process","env","TOKEN_SECRET_KEY","error"],"mappings":";;;;;;;AAAA;;;;AAEe,SAASA,cAAT,CAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,IAAlC,EAAwC;AACrD,MAAI;AACF,UAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAW,gBAAX,CAAd;;AACA,QAAI,CAACD,KAAL,EAAY;AACVF,MAAAA,GAAG,CACAI,MADH,CACU,GADV,EAEGC,IAFH,CAGI,iEAHJ;AAKD;;AAED,UAAMC,IAAI,GAAGC,sBAAIC,MAAJ,CAAWN,KAAX,EAAkBO,OAAO,CAACC,GAAR,CAAYC,gBAA9B,CAAb;;AACA,QAAI,CAACL,IAAL,EAAW;AACTN,MAAAA,GAAG,CACAI,MADH,CACU,GADV,EAEGC,IAFH,CAGI,wEAHJ;AAKD,KAND,MAMO;AACLN,MAAAA,GAAG,CAACO,IAAJ,GAAWA,IAAX;AACD;;AAEDL,IAAAA,IAAI;AACL,GAtBD,CAsBE,OAAOW,KAAP,EAAc;AACdX,IAAAA,IAAI,CAACW,KAAD,CAAJ;AACD;AACF","sourcesContent":["import jwt from 'jsonwebtoken';\n\nexport default function tokenValidator(req, res, next) {\n  try {\n    const token = req.header('x-access-token');\n    if (!token) {\n      res\n        .status(403)\n        .json(\n          'Sem autorização. É necessário informar um token para ter acesso',\n        );\n    }\n\n    const user = jwt.verify(token, process.env.TOKEN_SECRET_KEY);\n    if (!user) {\n      res\n        .status(403)\n        .json(\n          'Sem autorização. É necessário informar um token válido para ter acesso',\n        );\n    } else {\n      req.user = user;\n    }\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n}\n"],"file":"tokenValidator.js"}