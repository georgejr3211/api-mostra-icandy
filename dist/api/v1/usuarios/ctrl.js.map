{"version":3,"sources":["../../../../src/api/v1/usuarios/ctrl.js"],"names":["router","get","req","res","next","offset","limit","s","query","resources","resourceService","getAllResources","json","value","error","user","id","params","getResource","post","cpf","validateBr","body","password","bcrypt","hashSync","resource","createResource","Error","message","put","updateResource","delete","deleteResource"],"mappings":"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","sourcesContent":["import { Router } from 'express';\nimport bcrypt from 'bcryptjs';\nimport { validateBr } from 'js-brasil';\nimport * as resourceService from './service';\n\nconst router = Router();\n\nrouter.get('/', async (req, res, next) => {\n  try {\n    const { offset = 0, limit = 10, s = '' } = req.query;\n\n    const resources = await resourceService.getAllResources(offset, limit, s);\n\n    return res.json({\n      value: resources,\n    });\n  } catch (error) {\n    return next(error);\n  }\n});\n\nrouter.get('/logged-user', async (req, res, next) => {\n  try {\n    return res.json(req.user);\n  } catch (error) {\n    return next(error);\n  }\n});\n\nrouter.get('/:id', async (req, res, next) => {\n  try {\n    const { id } = req.params;\n\n    const resources = await resourceService.getResource(id);\n\n    return res.json({\n      value: resources,\n    });\n  } catch (error) {\n    return next(error);\n  }\n});\n\nrouter.post('/', async (req, res, next) => {\n  try {\n    const cpf = validateBr.cpf(req.body.cpf);\n\n    if (cpf) {\n      req.body.password = bcrypt.hashSync(req.body.password);\n      let resource = await resourceService.createResource(req.body);\n      resource = await resourceService.getResource(resource.id);\n\n      return res.json({\n        value: resource,\n      });\n    }\n    throw new Error('CPF INVÁLIDO!');\n  } catch (error) {\n    return next(error.message);\n  }\n});\n\nrouter.put('/:id', async (req, res, next) => {\n  try {\n    const { id } = req.params;\n\n    let resource = await resourceService.getResource(id);\n    if (req.body.password) {\n      req.body.password = bcrypt.hashSync(req.body.password);\n    } else {\n      req.body.password = resource.get('password');\n    }\n\n    resource = await resourceService.updateResource(id, req.body);\n\n    return res.json({\n      value: resource,\n    });\n  } catch (error) {\n    return next(error);\n  }\n});\n\nrouter.delete('/:id', async (req, res, next) => {\n  try {\n    const { id } = req.params;\n    await resourceService.deleteResource(id);\n\n    return res.json({\n      value: id,\n    });\n  } catch (error) {\n    return next(error);\n  }\n});\n\nexport default router;\n"],"file":"ctrl.js"}