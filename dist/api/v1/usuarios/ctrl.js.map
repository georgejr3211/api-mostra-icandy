{"version":3,"sources":["../../../../src/api/v1/usuarios/ctrl.js"],"names":["router","storage","multer","diskStorage","destination","req","file","cb","filename","Date","toISOString","originalname","upload","get","res","next","offset","limit","s","query","resources","resourceService","getAllResources","json","value","error","getAllAdminDevices","getResource","user","id","params","post","body","password","bcrypt","hashSync","resource","createResource","message","put","single","foto","updateResource","delete","deleteResource"],"mappings":"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","sourcesContent":["import { Router } from 'express';\nimport bcrypt from 'bcryptjs';\nimport { validateBr } from 'js-brasil';\nimport multer from 'multer';\nimport * as resourceService from './service';\n\nconst router = Router();\n\nconst storage = multer.diskStorage({\n  destination(req, file, cb) {\n    cb(null, './public/assets/images');\n  },\n  filename: (req, file, cb) => {\n    cb(null, new Date().toISOString() + file.originalname);\n  },\n});\n\nconst upload = multer({ storage });\n\nrouter.get('/', async (req, res, next) => {\n  try {\n    const { offset = 0, limit = 10, s = '' } = req.query;\n\n    const resources = await resourceService.getAllResources(offset, limit, s);\n\n    return res.json({\n      value: resources,\n    });\n  } catch (error) {\n    return next(error);\n  }\n});\n\nrouter.get('/admins', async (req, res, next) => {\n  try {\n    const resources = await resourceService.getAllAdminDevices();\n\n    return res.json({\n      value: resources,\n    });\n  } catch (error) {\n    return next(error);\n  }\n});\n\nrouter.get('/logged-user', async (req, res, next) => {\n  try {\n    const resources = await resourceService.getResource(req.user.id);\n    return res.json(resources);\n  } catch (error) {\n    return next(error);\n  }\n});\n\nrouter.get('/:id', async (req, res, next) => {\n  try {\n    const { id } = req.params;\n\n    const resources = await resourceService.getResource(id);\n\n    return res.json({\n      value: resources,\n    });\n  } catch (error) {\n    return next(error);\n  }\n});\n\nrouter.post('/', async (req, res, next) => {\n  try {\n    // const cpf = validateBr.cpf(req.body.cpf);\n    // if (cpf) {\n    req.body.password = bcrypt.hashSync(req.body.password);\n    let resource = await resourceService.createResource(req.body);\n    resource = await resourceService.getResource(resource.id);\n\n    return res.json({\n      value: resource,\n    });\n    // }\n    // throw new Error('CPF INVÁLIDO!');\n  } catch (error) {\n    return next(error.message);\n  }\n});\n\nrouter.put('/:id', upload.single('foto_usuario'), async (req, res, next) => {\n  try {\n    const { id } = req.params;\n    if (req.file) {\n      req.body.foto = `${req.file.filename}`;\n    }\n    let resource = await resourceService.getResource(id);\n    if (req.body.password) {\n      req.body.password = bcrypt.hashSync(req.body.password);\n    } else {\n      req.body.password = resource.get('password');\n    }\n\n    resource = await resourceService.updateResource(id, req.body);\n\n    return res.json({\n      value: resource,\n    });\n  } catch (error) {\n    return next(error);\n  }\n});\n\nrouter.delete('/:id', async (req, res, next) => {\n  try {\n    const { id } = req.params;\n    await resourceService.deleteResource(id);\n\n    return res.json({\n      value: id,\n    });\n  } catch (error) {\n    return next(error);\n  }\n});\n\nexport default router;\n"],"file":"ctrl.js"}