{"version":3,"sources":["../../../../src/api/v1/produtos/model.js"],"names":["sequelize","Sequelize","config","Produto","Model","init","id","allowNull","autoIncrement","primaryKey","type","INTEGER","categorias_id","references","model","key","restaurantes_id","nome","STRING","descricao","preco","DECIMAL","foto","ativo","defaultValue","tableName","Categoria","hasOne","foreignKey","sourceKey","as","Restaurante","belongsTo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;AAEA,MAAMA,SAAS,GAAG,IAAIC,kBAAJ,CAAcC,iBAAd,CAAlB;;AAEA,MAAMC,OAAN,SAAsBC,gBAAtB,CAA4B;;AAE5BD,OAAO,CAACE,IAAR,CACE;AACEC,EAAAA,EAAE,EAAE;AACFC,IAAAA,SAAS,EAAE,KADT;AAEFC,IAAAA,aAAa,EAAE,IAFb;AAGFC,IAAAA,UAAU,EAAE,IAHV;AAIFC,IAAAA,IAAI,EAAET,mBAAUU;AAJd,GADN;AAOEC,EAAAA,aAAa,EAAE;AACbF,IAAAA,IAAI,EAAET,mBAAUU,OADH;AAEbE,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE,YADG;AAEVC,MAAAA,GAAG,EAAE;AAFK,KAFC;AAMbR,IAAAA,SAAS,EAAE;AANE,GAPjB;AAeES,EAAAA,eAAe,EAAE;AACfN,IAAAA,IAAI,EAAET,mBAAUU,OADD;AAEfE,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE,cADG;AAEVC,MAAAA,GAAG,EAAE;AAFK,KAFG;AAMfR,IAAAA,SAAS,EAAE;AANI,GAfnB;AAuBEU,EAAAA,IAAI,EAAE;AACJP,IAAAA,IAAI,EAAET,mBAAUiB,MAAV,CAAiB,GAAjB,CADF;AAEJX,IAAAA,SAAS,EAAE;AAFP,GAvBR;AA2BEY,EAAAA,SAAS,EAAE;AACTT,IAAAA,IAAI,EAAET,mBAAUiB,MAAV,CAAiB,GAAjB;AADG,GA3Bb;AA8BEE,EAAAA,KAAK,EAAE;AACLV,IAAAA,IAAI,EAAET,mBAAUoB,OAAV,CAAkB,EAAlB,EAAsB,CAAtB,CADD;AAELd,IAAAA,SAAS,EAAE;AAFN,GA9BT;AAkCEe,EAAAA,IAAI,EAAE;AACJZ,IAAAA,IAAI,EAAET,mBAAUiB;AADZ,GAlCR;AAqCEK,EAAAA,KAAK,EAAE;AACLb,IAAAA,IAAI,EAAET,mBAAUU,OADX;AAELa,IAAAA,YAAY,EAAE;AAFT;AArCT,CADF,EA2CE;AAAExB,EAAAA,SAAF;AAAayB,EAAAA,SAAS,EAAE;AAAxB,CA3CF;AA8CAtB,OAAO,CAACuB,SAAR,GAAoBvB,OAAO,CAACwB,MAAR,CAAeD,cAAf,EAA0B;AAC5CE,EAAAA,UAAU,EAAE,IADgC;AAE5CC,EAAAA,SAAS,EAAE,eAFiC;AAG5CC,EAAAA,EAAE,EAAE;AAHwC,CAA1B,CAApB;AAKA3B,OAAO,CAAC4B,WAAR,GAAsB5B,OAAO,CAACwB,MAAR,CAAeI,eAAf,EAA4B;AAChDH,EAAAA,UAAU,EAAE,IADoC;AAEhDC,EAAAA,SAAS,EAAE,iBAFqC;AAGhDC,EAAAA,EAAE,EAAE;AAH4C,CAA5B,CAAtB,C,CAMA;;AACA3B,OAAO,CAAC4B,WAAR,GAAsB5B,OAAO,CAAC6B,SAAR,CAAkBD,eAAlB,EAA+B;AAAEH,EAAAA,UAAU,EAAE;AAAd,CAA/B,CAAtB;eAEezB,O","sourcesContent":["import Sequelize, { Model } from 'sequelize';\nimport config from '../../../config/database';\nimport Categoria from '../categorias/model';\nimport Restaurante from '../restaurantes/model';\n\nconst sequelize = new Sequelize(config);\n\nclass Produto extends Model {}\n\nProduto.init(\n  {\n    id: {\n      allowNull: false,\n      autoIncrement: true,\n      primaryKey: true,\n      type: Sequelize.INTEGER,\n    },\n    categorias_id: {\n      type: Sequelize.INTEGER,\n      references: {\n        model: 'categorias',\n        key: 'id',\n      },\n      allowNull: null,\n    },\n    restaurantes_id: {\n      type: Sequelize.INTEGER,\n      references: {\n        model: 'restaurantes',\n        key: 'id',\n      },\n      allowNull: false,\n    },\n    nome: {\n      type: Sequelize.STRING(100),\n      allowNull: false,\n    },\n    descricao: {\n      type: Sequelize.STRING(100),\n    },\n    preco: {\n      type: Sequelize.DECIMAL(10, 2),\n      allowNull: false,\n    },\n    foto: {\n      type: Sequelize.STRING,\n    },\n    ativo: {\n      type: Sequelize.INTEGER,\n      defaultValue: 1,\n    },\n  },\n  { sequelize, tableName: 'produtos' },\n);\n\nProduto.Categoria = Produto.hasOne(Categoria, {\n  foreignKey: 'id',\n  sourceKey: 'categorias_id',\n  as: 'categoria',\n});\nProduto.Restaurante = Produto.hasOne(Restaurante, {\n  foreignKey: 'id',\n  sourceKey: 'restaurantes_id',\n  as: 'restaurante',\n});\n\n// Produto.Categoria = Produto.belongsTo(Categoria, { foreignKey: 'id', sourceKey: 'categorias_id', as: 'categoria' });\nProduto.Restaurante = Produto.belongsTo(Restaurante, { foreignKey: 'id' });\n\nexport default Produto;\n"],"file":"model.js"}