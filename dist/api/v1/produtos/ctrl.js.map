{"version":3,"sources":["../../../../src/api/v1/produtos/ctrl.js"],"names":["router","storage","multer","diskStorage","destination","req","file","cb","filename","Date","toISOString","originalname","upload","get","res","next","offset","limit","s","query","resources","resourceService","getAllResources","json","value","error","id","params","resource","getResource","post","single","body","foto","createResource","put","updateResource","delete","deleteResource"],"mappings":"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","sourcesContent":["import { Router } from 'express';\nimport multer from 'multer';\nimport * as resourceService from './service';\n\nconst router = Router();\n\nconst storage = multer.diskStorage({\n  destination(req, file, cb) {\n    cb(null, './public/assets/images');\n  },\n  filename: (req, file, cb) => {\n    cb(null, new Date().toISOString() + file.originalname);\n  },\n});\n\nconst upload = multer({ storage });\n\nrouter.get('/', async (req, res, next) => {\n  try {\n    const { offset = 0, limit = 10, s = '' } = req.query;\n\n    const resources = await resourceService.getAllResources(offset, limit, s);\n\n    return res.json({\n      value: resources,\n    });\n  } catch (error) {\n    return next(error);\n  }\n});\n\nrouter.get('/:id', async (req, res, next) => {\n  try {\n    const { id } = req.params;\n\n    const resource = await resourceService.getResource(id);\n\n    return res.json({\n      value: resource,\n    });\n  } catch (error) {\n    return next(error);\n  }\n});\n\nrouter.post('/', upload.single('foto_produto'), async (req, res, next) => {\n  try {\n    req.body.foto = `${req.file.filename}`;\n    let resource = await resourceService.createResource(req.body);\n    resource = await resourceService.getResource(resource.id);\n\n    return res.json({\n      value: resource,\n    });\n  } catch (error) {\n    return next(error);\n  }\n});\n\nrouter.put('/:id', async (req, res, next) => {\n  try {\n    const { id } = req.params;\n\n    let resource = await resourceService.updateResource(id, req.body);\n    resource = await resourceService.getResource(id);\n\n    return res.json({\n      value: resource,\n    });\n  } catch (error) {\n    return next(error);\n  }\n});\n\nrouter.delete('/:id', async (req, res, next) => {\n  try {\n    const { id } = req.params;\n    await resourceService.deleteResource(id);\n\n    return res.json({\n      value: id,\n    });\n  } catch (error) {\n    return next(error);\n  }\n});\n\nexport default router;\n"],"file":"ctrl.js"}