{"version":3,"sources":["../../../../src/api/v1/produtos/ctrl.js"],"names":["router","storage","multer","diskStorage","destination","req","file","cb","filename","Date","toISOString","originalname","upload","get","res","next","offset","limit","s","query","resources","resourceService","getAllResources","console","log","json","value","error","id","params","resource","getResource","post","single","body","foto","createResource","put","updateResource","delete","deleteResource"],"mappings":"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","sourcesContent":["import { Router } from 'express';\nimport multer from 'multer';\nimport * as resourceService from './service';\n\nconst router = Router();\n\nconst storage = multer.diskStorage({\n  destination(req, file, cb) {\n    cb(null, './public/assets/images');\n  },\n  filename: (req, file, cb) => {\n    cb(null, new Date().toISOString() + file.originalname);\n  },\n});\n\nconst upload = multer({ storage });\n\nrouter.get('/', async (req, res, next) => {\n  try {\n    const { offset = 0, limit = 10, s = '' } = req.query;\n\n    const resources = await resourceService.getAllResources(offset, limit, s);\n    console.log('resources', resources);\n\n    return res.json({\n      value: resources,\n    });\n  } catch (error) {\n    return next(error);\n  }\n});\n\nrouter.get('/:id', async (req, res, next) => {\n  try {\n    const { id } = req.params;\n\n    const resource = await resourceService.getResource(id);\n\n    return res.json({\n      value: resource,\n    });\n  } catch (error) {\n    return next(error);\n  }\n});\n\nrouter.post('/', upload.single('foto_produto'), async (req, res, next) => {\n  try {\n    if (req.file) {\n      req.body.foto = `${req.file.filename}`;\n    }\n    let resource = await resourceService.createResource(req.body);\n    resource = await resourceService.getResource(resource.id);\n\n    return res.json({\n      value: resource,\n    });\n  } catch (error) {\n    return next(error);\n  }\n});\n\nrouter.put('/:id', upload.single('foto_produto'), async (req, res, next) => {\n  try {\n    const { id } = req.params;\n    if (req.file) {\n      req.body.foto = `${req.file.filename}`;\n    }\n    let resource = await resourceService.updateResource(id, req.body);\n    resource = await resourceService.getResource(id);\n\n    return res.json({\n      value: resource,\n    });\n  } catch (error) {\n    return next(error);\n  }\n});\n\nrouter.delete('/:id', async (req, res, next) => {\n  try {\n    const { id } = req.params;\n    await resourceService.deleteResource(id);\n\n    return res.json({\n      value: id,\n    });\n  } catch (error) {\n    return next(error);\n  }\n});\n\nexport default router;\n"],"file":"ctrl.js"}